HOST: http://typekit.com/api/v1

--- Typekit API ---
---
### About this documentation
This documentation describes the RESTful APIs provided by the Adobe Typekit service to anable the integration of the desktop font sync feature 
into Adobe point products.

For API examples this document uses two font families: 

* Coquette (opaque id drjf) with Ligth, Regular and Bold variations
* Proxima Nova (opaque id Proxima) with Black, Thin and Regular variations. For 

Other font family and sync font properties use consistent but made up values and should not be relied on for actual database queries. 
Data which is temporary, such as tokens, is mocked up using all caps.

### Schema
All API access is over HTTPS, and accessed from the typekit.com/api/desktop_v1 domain. 
All data is sent and received as JSON.

###Client Errors

There are three possible types of client errors on API calls that receive request bodies:

* Sending invalid JSON will result in a 400 Bad Request response.
* Sending the wrong type of JSON values will result in a 400 Bad Request response.
* Sending invalid fields will result in a 422 Unprocessable Entity response.

All error objects have resource and field properties so the client can tell what the problem is. There’s also an error code to let you know what is wrong with the field. These are the possible validation error codes:

* missing - this means a resource does not exist.
* missing_field - this means a required field on a resource has not been set.
* invalid - this means the formatting of a field is invalid. The documentation for that resource should be able to give you more specific information.
* already_exists - this means another resource has the same value as this field. This can happen in resources that must have some unique key (such as Label names).

If resources have custom validation errors, they will be documented with the resource.

### Authentication
The API requests are authenticated by validating the OAuth bearer token issued by IMS and included in the request header. 
Since the token contains both the user id and the client id the typekit service can use it to authenticate the user and track the origin of the request.
The requests are valid for the duration of the access token.

Methods which return publicly available data, such as font family information, do not require authentication.

### Request rate limiting
Version 1 of this API is intended for internal Adobe use. As such there are no enforced request rate limits

### Localization

Human readable text in the response data is localized for the set of languages supported by the Typekit site. 
The desired language can be specified in the Accept-Language field of the content header.
The response will then set the Content-Language header as well as the Vary header.

### Data structures
All request and response data is represented as JSON. XML is not supported.

The Typekit service maintains user specific selection of fonts which are synced to authorized desktop computers. 
While the user modifies the font selection based on complete font families the underlying data is font variation based.
The font selection API is therefore also font variation based thus allowing the client software to add a specific font style to the selection collection.

#### Desktop font JSON object

This data represents a single font variation of a particular version as synced to the desktop.

    {
        "id": "TkD-100-2jt9s6h8lq",
        "family_id": "drjf",
        "style": "Thin",
        "family": "Coquette",
        "version": "1.0.0"
        "links": {
            "self": "https://typekit.com/api/desktop_v1/font_variation/TkD-100-2jt9s6h8lq",
            "family": "https://typekit.com/api/desktop_v1/font_family/drjf"
        }
    }

#### Font family JSON object:

    {
        "id": "drjf",
        "name": "Coquette",
        "biography": "Coquette, designed in 2001, could be the result of a happy marriage of Kabel and French Script. According to Mark, \"The idea for this typeface got stuck in my head in the early 90s. To me, it feels like it has always existed, even though I have never seen anything quite like it. I am happy to offer this unique yet strangely familiar script.\"",
        "variations": [
          {
            "fvd": "n3",
            "name": "Coquette Light",
            "id": "drjf:n3",
            "link": "/api/v1/json/families/drjf/n3"
          },
          {
            "fvd": "n4",
            "name": "Coquette Regular",
            "id": "drjf:n4",
            "link": "/api/v1/json/families/drjf/n4"
          },
          {
            "fvd": "n7",
            "name": "Coquette Bold",
            "id": "drjf:n7",
            "link": "/api/v1/json/families/drjf/n7"
          }
        ],
        "links": {
            "self": "https://typekit.com/api/desktop_v1/font_family/drjf",
            "html": "https://typekit.com/fonts/coquette",
            "purchase": "http://www.fonts.com/findfonts/mondosearchresults.htm?st=12&kid=Coquette"
        }
    }
    
#### User Info JSON Object

    {
        "id": "7F8F5A114A01713D9920FAAE@AdobeID",
        "quota_used": 12,
        "quota_total": 30,
        "links": {
            "self": "https://typekit.com/api/desktop_v1/user_info/7F8F5A114A01713D9920FAAE@AdobeID"
        }
    }

#### System font JSON Object

This is the data filled in by the client when requesting a match for a missing system font.

    {
        "postscript_name": "ProximaNova-Black",
        "style_name": "Black",
        "native_style_name": "Black",
        "full_name": "Proxima Nova Black",
        "native_full_name": "Proxima Nova Black",
        "type": "TrueType",
        "version": "1.0.0"
    }

####Font selection status:
Some endpoints need to communicate the availability of the requested sync font. The following HTTP standard response codes are used:

* 200 - OK
* 204 - font not selected
* 400 - bad font id
* 401 - expired access token
* 403 - font not licensed
* 404 - font not found

### Editing and comments
This page and all comments can be written in [Markdown](http://daringfireball.net/projects/markdown/syntax) syntax

---

--
Health & Status
--

Verifies that the API is available

GET /
< 200
< Content-Type: text/html;charset=utf-8
"Typekit API v1"

Retrieve the info describing the authenticated user, specifically provide quota information.

<table>
    <th>Required header</th>
    <tr>
    <td>X-Access-Token</td>
    <td>valid IMS access token</td>
    </tr>
</table>

GET user
> X-Access-Token: IMS_ACCESS_TOKEN
< 200
< Content-Type: application/json
"{"user_id":"7F8F5A114A01713D9920FAAE@AdobeID","quota_used":12,"quota_total":30}"
+++++
< 404
< Content-Type: application/json
"{"message":"user not found"}"

-- 
Browsing
These end points retrieve the underlying model for font families, variations and libraries. Authentication is not required.

*Note*: These endpoints are deployed as part of the Typekit V1 API.
--

Retrieve font family description. Family id is the opaque id assigned to each typekit font family. Returns font family JSON object if found.

<table>
    <th>URI parameters </th>
    <tr>
    <td>family id</td>
    <td>4 character opaque id unique to each family</td>
    </tr>
</table>

GET families/{family_id}
< 200
< Content-Type: application/json
"{"id":"drjf","name":"Coquette","biography":"Coquette, designed in 2001, could be the result of a happy marriage of Kabel and French Script. According to Mark, \"The idea for this typeface got stuck in my head in the early â€™90s. To me, it feels like it has always existed, even though Iâ€™ve never seen anything quite like it. I am happy to offer this unique yet strangely familiar script.\"","links":{"self":"https://typekit.com/api/desktop_v1/font_family/drjf","html":"https://typekit.com/fonts/coquette","purchase":"http://www.fonts.com/findfonts/mondosearchresults.htm?st=12&kid=Coquette"}}"
+++++
< 404
< Content-Type: application/json
"{"message":"font family not found"}"

Retrieve web font variation description.

<table>
    <th>URI parameters </th>
    <tr>
    <td>family id</td>
    <td>4 character opaque id unique to each family</td>
    </tr>
    <tr>
    <td>variation id</td>
    <td>2 character id identifying the variation.</td>
    </tr>
</table>

GET variations/{family_id}/{variation_id}
< 200
< Content-Type: application/json
{"variation":{"name":"Coquette Light","id":"drjf:n3","font_variant":"normal","libraries":[{"name":"Personal Library","link":"/api/v1/json/libraries/personal","id":"personal"},{"name":"Full Library","link":"/api/v1/json/libraries/full","id":"full"}],"family":{"name":"Coquette","link":"/api/v1/json/families/drjf","id":"drjf"},"foundry":{"name":"Mark Simonson Studio","slug":"mark-simonson-studio"},"font_style":"normal","postscript_name":"Coquette-Light","font_weight":"300"}}+++++
< 404
< Content-Type: application/json
"{"message":"font family not found"}"

-- 
Desktop Fonts
These end points expose CRUD operations for the sync fonts selection. 

The client must authenticate using IMS access token.
--

Generates a temporary signed URL to download the font resource. The requested font is provisioned for the user bearing the access token.

GET desktop/sync/{font_id}
> X-Access-Token: IMS_ACCESS_TOKEN
< 302
< Content-Type: text/html;charset=utf-8
< Location: https://dnzuu5synxxfk.cloudfront.net/000000000000000000018916/10002/2026/otf?Expires=1370043917&Signature=SHA1_SIGNATURE&Key-Pair-Id=KEYPAIR_ID

Retrieve the description for a specific version of a desktop font.

<table>
    <th>Required header</th>
    <tr>
    <td>X-Access-Token</td>
    <td>valid IMS access token</td>
    </tr>
</table>

<table>
    <th>URI parameters </th>
    <th></th>
    <th>Format</th>
    <tr>
    <td>font id</td>
    <td>unique id describing particular desktop font variation and version</td>
    <td>TkD-[0-9]{3,5}-[a-z0-9]{40}</td>
    </tr>
</table>

GET desktop/fonts/{font_id}
> X-Access-Token: IMS_ACCESS_TOKEN
< 200
< Content-Type: application/json
"{"id":"TkD-100-2jt9s6h8lq","family_id":"drjf","style":"Thin","family":"Coquette","links":{"self":"https://typekit.com/api/desktop_v1/sync_font/TkD-100-2jt9s6h8lq","family":"https://typekit.com/api/desktop_v1/font_family/drjf"}}"
+++++
< 400
< Content-Type: application/json
"{"message":"bad font variation id"}"
+++++
< 404
< Content-Type: application/json
"{"message":"font variation not found"}"


List selected fonts for a particular user. Returns a JSON array of font variation objects.

The example models a user who has all 3 variations of the Coquette font in the font selection.

<table>
    <th>Required header</th>
    <tr>
    <td>X-Access-Token</td>
    <td>valid IMS access token</td>
    </tr>
</table>

<table>
    <th>URI parameters </th>
    <th></th>
    <th>Format</th>
    <tr>
    <td>user id</td>
    <td>URL encoded Adobe profile ID</td>
    <td>[A-Z0-9]{24}%40AdobeID</td>
    </tr>
</table>

GET desktop/selections/{user_id}
> X-Access-Token: IMS_ACCESS_TOKEN
< 200
< Content-Type: application/json
"[{"font_id":"TkD-100-hdnoine93k","family_id":"drjf","style":"Regular","family":"Coquette","links":{"self":"https://typekit.com/api/desktop_v1/sync_font/TkD-101-hdnoine93k","family":"https://typekit.com/api/desktop_v1/font_family/drjf"}},{"font_id":"TkD-100-8hh82kj02e","family_id":"drjf","style":"Regular","family":"Coquette","links":{"self":"https://typekit.com/api/desktop_v1/sync_font/TkD-100-8hh82kj02e","family":"https://typekit.com/api/desktop_v1/font_family/drjf"}},{"font_id":"TkD-100-2jt9s6h8lq","family_id":"drjf","style":"Thin","family":"Coquette","links":{"self":"https://typekit.com/api/desktop_v1/sync_font/TkD-102-2jt9s6h8lq","family":"https://typekit.com/api/desktop_v1/font_family/drjf"}}]"

Retrieve the description of a particular font variation from the font selection collection.

If the font variation is not selected by the user this method returns 204. The request is correct but there is no content associated with this query.

<table>
    <th>Required header</th>
    <tr>
    <td>X-Access-Token</td>
    <td>valid IMS access token</td>
    </tr>
</table>

<table>
    <th>URI parameters </th>
    <th></th>
    <th>Format</th>
    <tr>
    <td>user id</td>
    <td>URL encoded Adobe profile ID</td>
    <td>[A-Z0-9]{24}%40AdobeID</td>
    </tr>
    <tr>
    <td>font id</td>
    <td>unique id describing particular desktop font variation and version</td>
    <td>TkD-[0-9]{3,5}-[a-z0-9]{40}</td>
    </tr>
</table>

GET desktop/selections/{user_id}/{font_id}
> X-Access-Token: IMS_ACCESS_TOKEN
< 200
< Content-Type: application/json
"{"font_id":"TkD-100-8hh82kj02e","family_id":"drjf","style":"Regular","family":"Coquette","links":{"self":"https://typekit.com/api/desktop_v1/sync_font/TkD-100-8hh82kj02e","family":"https://typekit.com/api/desktop_v1/font_family/drjf"}}"
+++++
< 204
< Content-Type: application/json
"{"message": "Font variation not selected"}"
+++++
< 400
< Content-Type: application/json
"{"message": "Font variation id not valid"}"
+++++
< 403
< Content-Type: application/json
"{"message": "Font variation not licensed"}"
+++++
< 404
< Content-Type: application/json
"{"message": "Font variation not found"}"

Add a single font variations to the font selection. 

POST desktop/selections/{user_id}/{font_id}
> X-Access-Token: IMS_ACCESS_TOKEN
< 200
< Content-Type: application/json
+++++
< 400
< Content-Type: application/json
{"message": "bad request"}
+++++
< 403
< Content-Type: application/json
"{"message": "Font variation not licensed"}"

Remove a font variation from the collection of sync fonts.

DELETE desktop/selections/{user_id}/{font_id}
> X-Access-Token: IMS_ACCESS_TOKEN
< 200
< Content-Type: application/json
+++++
< 400
< Content-Type: application/json
{"message": "bad request"}

Accepts a filled in system font JSON object.
This method matches it to the available sync fonts and returns a suggested alternative from the Typekit library.

<table>
    <th>Required JSON body</th>
    <tr>
    <td>postscript_name</td>
    </tr>
</table>

GET desktop/match
> X-Access-Token: IMS_ACCESS_TOKEN
{"postscript_name":"ProximaNova-Black","style_name":"Black","native_style_name":"Black","full_name":"Proxima Nova Black","native_full_name":"Proxima Nova Black","type":"TrueType","version":"1.0.0"}
< 200
< Content-Type: application/json
"{"font_id":"TkD-100-7k90dn92ul","family_id":"vcsm","style":"Black","family":"Proxima Nova","links":{"self":"https://typekit.com/api/desktop_v1/font_variation/TkD-100-7k90dn92ul","family":"https://typekit.com/api/desktop_v1/font_family/vcsm"}}"

-- JSON Schema Validations --

